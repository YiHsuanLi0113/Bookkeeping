@using PagedList.Mvc;
@using Bookkeeping.Models.ViewModels
@using Bookkeeping.Models
@model PagedList.IPagedList<Bookkeeping.Models.ViewModels.RecordDataViewModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@helper changeRecordColor(string ftColor, int i, RecordDataViewModel model)
{
    <tr style="color:@ftColor">
        <td>@i</td>
        <td> @Html.DisplayFor(m => model.RecordClass)</td>
        <td>@Html.DisplayFor(m => model.RecordDate)</td>
        <td>@Html.DisplayFor(m => model.RecordAmount)</td>
    </tr>
}
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-hover">
            <tr>
                <th>#</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordClass)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordDate)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordAmount)</th>
            </tr>
            @{ var i = 1; }
            @foreach (var record in Model)
            {
                string fontColor = "";
                switch (record.RecordClass)
                {
                    case "支出":
                        fontColor = "#C70000"; //紅色
                        break;
                    case "收入":
                        fontColor = "#00579E"; //藍色
                        break;
                    default:
                        break;
                }
                @changeRecordColor(fontColor, i, record)
                i++;
            }
        </table>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of  @Model.PageCount
        @Html.PagedListPager(Model,
  page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { UpdateTargetId = "insertedRecord" }))
    </div>
</div>
