@using PagedList.Mvc;
@using Bookkeeping.Models.ViewModels;
@model PagedList.IPagedList<Bookkeeping.Models.ViewModels.RecordDataViewModel>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@helper getFontColor(int i, string color,RecordDataViewModel model)
{
    <tr style="color: @color">
        <td>@i</td>
        <td>@Html.DisplayFor(m => model.RecordClass)</td>
        <td>@Html.DisplayFor(m => model.RecordDate)</td>
        <td>@Html.DisplayFor(m => model.RecordAmount)</td>
    </tr>
}
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-hover">
            <tr>
                <th>#</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordClass)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordDate)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecordAmount)</th>
            </tr>
            @{ var i = 1; }
            @foreach(var record in Model)
            {
                string fontColor = "";
                switch(record.RecordClass)
                {
                    case "支出" :
                        fontColor = "#BF0060";
                        break;
                    case "收入" :
                        fontColor = "#005AB5";
                        break;
                }
                @getFontColor(i, fontColor, record)
                i++;
            }
        </table>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of  @Model.PageCount
        @Html.PagedListPager(Model,
  page => Url.Action("Index", new { page }))
    </div>
</div>
